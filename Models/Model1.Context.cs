//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_Exam_System.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OnlineeExamSystemEntities2 : DbContext
    {
        public OnlineeExamSystemEntities2()
            : base("name=OnlineeExamSystemEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<StudentExamEnrollment> StudentExamEnrollments { get; set; }
        public virtual DbSet<StudentResult> StudentResults { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<StudentAnswer> StudentAnswers { get; set; }
    
        public virtual ObjectResult<GetExamStats_Result> GetExamStats(Nullable<int> examID)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExamStats_Result>("GetExamStats", examIDParameter);
        }
    
        public virtual int GetStats(Nullable<int> examID)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetStats", examIDParameter);
        }
    
        public virtual ObjectResult<GetStudentExamAnalysis_Result> GetStudentExamAnalysis(Nullable<int> examID)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentExamAnalysis_Result>("GetStudentExamAnalysis", examIDParameter);
        }
    
        public virtual ObjectResult<GetOverallResultCounts_Result> GetOverallResultCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOverallResultCounts_Result>("GetOverallResultCounts");
        }
    }
}
